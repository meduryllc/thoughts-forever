// This file only exists to typecheck that modules satisfy an interface
import * as ALGO from './ALGO.mjs';
import * as CFX from './CFX.mjs';
import * as CFX_compiled from './CFX_compiled.mjs';
import * as CFX_compiled_impl from './CFX_compiled_impl.mjs';
import * as CFX_impl from './CFX_impl.mjs';
import * as ETH from './ETH.mjs';
import * as ETH_compiled from './ETH_compiled.mjs';
import * as ETH_compiled_impl from './ETH_compiled_impl.mjs';
import * as ETH_impl from './ETH_impl.mjs';
import * as cfxers from './cfxers.mjs';
import * as shared_backend from './shared_backend.mjs';
import * as shared_user from './shared_user.mjs';
import ethers from 'ethers';
var _shared_backend = shared_backend;
void(_shared_backend);
var _shared_user = shared_user;
void(_shared_user);
var _ETH_compiled = ETH_compiled;
void(_ETH_compiled);
var _CFX_compiled = CFX_compiled;
void(_CFX_compiled);
var _ETH = ETH;
void(_ETH);
var _CFX = CFX;
void(_CFX);
var _ALGO = ALGO;
void(_ALGO);
var _ethers = ethers;
void(_ethers);
var _cfxers = cfxers;
void(_cfxers);
var _ETH_impl = ETH_impl;
void(_ETH_impl);
var _CFX_impl = CFX_impl;
void(_CFX_impl);
var _ETH_compiled_impl = ETH_compiled_impl;
void(_ETH_compiled_impl);
var _CFX_compiled_impl = CFX_compiled_impl;
void(_CFX_compiled_impl);
//# sourceMappingURL=module_typecheck.js.map
